version: v1.0
name: FlowCrypt Android App
agent:
  machine:
    type: e1-standard-4
    os_image: ubuntu1804
  containers:
    - name: main
      image: semaphoreci/android:29
global_job_config:
  prologue:
    commands:
      - export PATH=${ANDROID_HOME}/emulator:${ANDROID_HOME}/tools:${ANDROID_HOME}/tools/bin:${ANDROID_HOME}/platform-tools:${PATH}
      - sudo rm -rf ~/.rbenv ~/.phpbrew
      - checkout
      # restore caches
      - export SUM=$(checksum build.gradle)-$(checksum FlowCrypt/build.gradle)-$(checksum ./script/ci-install-android-sdk.sh)
      - export GRADLE_CACHE=gradle-cache-$SUM # per conf files hash
      - export BUILD_NATIVE_CACHE=build-native-cache-$SEMAPHORE_GIT_BRANCH-$SUM  # per branch and conf files hash
      - export BUILD_CACHE=build-cache-$SEMAPHORE_GIT_BRANCH-$SUM  # per branch and conf files hash
      - cache restore $GRADLE_CACHE
      - cache restore $BUILD_NATIVE_CACHE
      - cache restore $BUILD_CACHE
blocks:
  - name: Test without mailserver
    execution_time_limit:
      minutes: 30
    task:
      jobs:
        - name: Test without mailserver
          commands:
            - cat /proc/cpuinfo
            # Install Android dependencies
            - ./script/ci-install-android-sdk.sh
            # Enable gradle daemon. https://docs.gradle.org/current/userguide/gradle_daemon.html#sec:disabling_the_daemon
            - sudo mkdir -p ~/.gradle && echo "org.gradle.daemon=true" >> ~/.gradle/gradle.properties
            # run Lint checks
            - ./script/ci-lint-checks.sh
            # run JUnit tests
            - ./script/ci-junit-tests.sh
            # Setup and run an emulator
            - echo no | avdmanager -v create avd -n ci-test-pixel-x86-64-api29 -d 19 -k "system-images;android-29;google_apis;x86_64"
            - echo "vm.heapSize=256"  >> ~/.android/avd/ci-test-pixel-x86-64-api29.avd/config.ini
            - emulator -list-avds # debug
            - emulator -avd ci-test-pixel-x86-64-api29 -no-window -no-boot-anim -no-audio -gpu auto& # start emulator in the background
            - ./script/ci-wait-for-emulator.sh # wait till ready
            # Run instrumentation tests
            - ./script/ci-tests-without-mailserver.sh
      epilogue:
        on_fail:
          commands:
            # store errors log
            - echo "Store errors log"
            - ls -a
            - artifact push job --expire-in 1w FlowCrypt/build/reports/androidTests/connected/flavors/DEVTEST/
        on_pass:
          commands:
            # store cache
            - echo "Store cache"
            - find ~/.gradle/caches/ -name "*.lock" -type f -delete # https://medium.com/cirruslabs/mastering-gradle-caching-and-incremental-builds-37eb1af7fcde
            - cache has_key $GRADLE_CACHE || cache store $GRADLE_CACHE .gradle
            - cache has_key $BUILD_NATIVE_CACHE || cache store $BUILD_NATIVE_CACHE FlowCrypt/.externalNativeBuild
            - cache has_key $BUILD_CACHE || cache store $BUILD_CACHE FlowCrypt/build