version: v1.0
name: FlowCrypt Android App
agent:
  machine:
    type: e1-standard-4
    os_image: ubuntu1804
global_job_config:
  env_vars:
    - name: SEMAPHORE_GIT_DIR
      value: /home/semaphore/git/flowcrypt-android
    - name: ANDROID_SDK_ROOT
      value: /home/semaphore/Android/Sdk
  prologue:
    commands:
      - export PATH=${ANDROID_SDK_ROOT}/emulator:${ANDROID_SDK_ROOT}/tools:${ANDROID_SDK_ROOT}/tools/bin:${ANDROID_SDK_ROOT}/platform-tools:${PATH}
      - sudo rm -rf ~/.rbenv ~/.phpbrew
      - checkout
      # restore caches
      - export SUM=$(checksum build.gradle)-$(checksum FlowCrypt/build.gradle)-$(checksum ./script/ci-install-android-sdk.sh)
      - export GRADLE_CACHE=gradle-cache-$SUM # per conf files hash
      - export ANDROID_SDK_CACHE=android-sdk-$SUM # per conf files hash
      - export BUILD_NATIVE_CACHE=build-native-cache-$SEMAPHORE_GIT_BRANCH-$SUM  # per branch and conf files hash
      - export BUILD_CACHE=build-cache-$SEMAPHORE_GIT_BRANCH-$SUM  # per branch and conf files hash
      - cache restore $GRADLE_CACHE
      - cache restore $ANDROID_SDK_CACHE
      - cache restore $BUILD_NATIVE_CACHE
      - cache restore $BUILD_CACHE
      - cache restore gradle-wrapper
      - cache restore gradle-cache
      - cache restore android-build
      # Install Android dependencies
      - ./script/ci-install-android-sdk.sh
blocks:
  - name: 'Build'
      #skip:
    #when: "(branch != 'master' OR branch != 'dev') AND pull_request !~ '.*'"
    task:
      jobs:
        - name: 'Build Project'
          commands:
            - ./gradlew assembleDevTestDebug
      epilogue:
        on_pass:
          commands:
            - cache clear
            - cache delete gradle-wrapper
            - cache delete gradle-cache
            - cache delete android-build
            - cache store gradle-wrapper ~/.gradle/wrapper
            - cache store gradle-cache ~/.gradle/caches
            - cache store android-build ~/.android/build-cache

  - name: 'Testing'
    execution_time_limit:
      minutes: 45
    task:
      jobs:
        - name: 'Lint'
          commands:
            - cat /proc/cpuinfo
            # run Lint checks
            - ./script/ci-lint-checks.sh

        - name: 'JUnit tests'
          commands:
            # run JUnit tests
            - ./script/ci-junit-tests.sh
      epilogue:
        on_fail:
          commands:
            # store errors log
            - echo "Store errors log"
            - ls -a
            - artifact push job --expire-in 1w FlowCrypt/build/reports/androidTests/connected/flavors/DEVTEST/
            - echo "Store screenshots"
            - adb pull "/mnt/sdcard/Download"
            - adb shell ls /mnt/sdcard/Download
            - artifact push job --expire-in 1w Download
        on_pass:
          commands:
            # store cache
            - echo "Store cache"
            - find ~/.gradle/caches/ -name "*.lock" -type f -delete # https://medium.com/cirruslabs/mastering-gradle-caching-and-incremental-builds-37eb1af7fcde
            - cache has_key $GRADLE_CACHE || cache store $GRADLE_CACHE .gradle
            - cache has_key $ANDROID_SDK_CACHE || cache store $ANDROID_SDK_CACHE $ANDROID_SDK_ROOT
            - cache has_key $BUILD_NATIVE_CACHE || cache store $BUILD_NATIVE_CACHE FlowCrypt/.externalNativeBuild
            - cache has_key $BUILD_CACHE || cache store $BUILD_CACHE FlowCrypt/build